#!/bin/bash

filein() {
  FILE=""
  while read -r line; do
    FILE=$FILE$line$"\n"
  done < "$1"
}

numLines() {
  numL=0
  while read -r line; do
    numL=$(($numL + 1))
  done < "$1"
}

dims() {
  if [ "$#" -ne 1 ]; then
      echo "Incorrect number of arguments. Expected 1, got $#. Please provide 1 matrix." >&2
      exit 1
  fi
  numLines $1
  x=$numL
  grep -o $'\t' $1 > temp
  numLines temp
  y=$numL
  COLS=$((y/x))
  COLS=$(($COLS+1))
  echo $x $COLS
}

transpose() {
  if [ "$#" -ne 1 ]; then
      echo "Incorrect number of arguments. Expected 1, got $#. Please provide 1 matrix." >&2
      exit 1
  fi
  echo "TRANS"
  filein $1
}

mean() {
  if [ "$#" -ne 1 ]; then
      echo "Incorrect number of arguments. Expected 1, got $#. Please provide 1 matrix." >&2
      exit 1
  fi
  echo "MEAN"
  filein $1
}

add() {
  if [ "$#" -ne 2 ]; then
      echo "Incorrect number of arguments. Expected 2, got $#. Please provide 2 matrices." >&2
      exit 1
  fi
  echo "ADD"
  filein $1
  filein $2
}

multiply() {
  if [ "$#" -ne 2 ]; then
      echo "Incorrect number of arguments. Expected 2, got $#. Please provide 2 matrices." >&2
      exit 1
  fi
  echo "MULT"
  filein $1
  filein $2
}

###MAIN###

case "$1" in
    dims|d)
      dims "${@:2}"
      exit 0
      ;;
    transpose|t)
        transpose "${@:2}"
        exit 0
        ;;
    mean|m)
        mean "${@:2}"
        exit 0
        ;;
    add|a)
        add "${@:2}"
        exit 0
        ;;
    multiply|M)
        multiply "${@:2}"
        exit 0
        ;;
    help|h)
        echo $"Usage: $0 {dims|transpose|mean|add|multiply}"
        exit 0
        ;;
    *)
        echo -e $"Command Does not Exist!\nUsage: $0 {dims|transpose|mean|add|multiply}">&2
        exit 1
esac
