#!/bin/bash

filein() {
  FILE=""
  while read -r line; do
    FILE=$FILE$line$"\n"
  done < "$1"
}

numLines() {
  numL=0
  while read -r line; do
    numL=$(($numL + 1))
  done < "$1"
}

dims() {
  if [ "$#" -ne 1 ]; then
      echo "Incorrect number of arguments. Expected 1, got $#. Please provide 1 matrix." >&2
      exit 1
  fi
  numLines $1
  x=$numL
  grep -o $'\t' $1 > $t0
  numLines $t0
  y=$numL
  if [[ $x = 0 ]]; then
     x=1
  fi
  COLS=$((y/x))
  COLS=$(($COLS+1))
  echo $x $COLS
}

transpose() {
  if [ "$#" -ne 1 ]; then
      echo "Incorrect number of arguments. Expected 1, got $#. Please provide 1 matrix." >&2
      exit 1
  fi
  echo "TRANS"
  filein $1
}

mean() {
  if [ "$#" -ne 1 ]; then
      echo "Incorrect number of arguments. Expected 1, got $#. Please provide 1 matrix." >&2
      exit 1
  fi
  filein $1
  FILE1=$FILE
  dims $1 > temp
  dim1=$(cat temp)
  ROWS=$x
  COLS=$COLS
  TOTALLEN=$((x * COLS))
  TOTALLEN=$((TOTALLEN - 1))
  POS1=$"0"

  echo "$FILE1" | grep -o "[0-9-]*[$'\t'$'\n']*" | grep -o "[0-9-]*" > temp1
  FILE1=$(cat temp1)
  while [[ $count -le $TOTALLEN ]]; do
    num1=$""
    re=-?[0-9]
    while [[ ${FILE1:$POS1:1} =~ ${re} ]]; do
      num1=$num1${FILE1:$POS1:1}
      POS1=$(($POS1 + 1))
    done
    total=$(($total + $num1))
    POS1=$(($POS1 + 1))
    count=$(($count + 1))
  done
  finalstr=$(($total / $TOTALLEN))
  echo -e $finalstr
}

add() {
  if [ "$#" -ne 2 ]; then
      echo "Incorrect number of arguments. Expected 2, got $#. Please provide 2 matrices." >&2
      exit 1
  fi
  dims $1 > $t0
  dim1=$(cat $t0)
  dims $2 > $t0
  dim2=$(cat $t0)
  if [[ "$dim1" != "$dim2" ]]; then
      echo "Can't add mismatched matrices." >&2
      exit 1
  fi

  filein $1
  FILE1=$FILE
  filein $2
  FILE2=$FILE
  ROWS=$x
  COLS=$COLS
  TOTALLEN=$((x * COLS))
  TOTALLEN=$((TOTALLEN - 1))
  POS1=$"0"
  POS2=$"0"

  echo "$FILE1" | grep -o "[0-9-]*[$'\t'$'\n']*" | grep -o "[0-9-]*" > $t1
  FILE1=$(cat $t1)
  echo "$FILE2" | grep -o "[0-9-]*[$'\t'$'\n']*" | grep -o "[0-9-]*" > $t2
  FILE2=$(cat $t2)
  while [[ $count -le $TOTALLEN ]]; do
    num1=$""
    num2=$""
    re=[0-9-]
    while [[ ${FILE1:$POS1:1} =~ ${re} ]]; do
      num1=$num1${FILE1:$POS1:1}
      POS1=$(($POS1 + 1))
    done
    POS1=$(($POS1 + 1))
    while [[ "${FILE2:$POS2:1}" =~ ${re} ]]; do
      num2=$num2${FILE2:$POS2:1}
      POS2=$(($POS2 + 1))
    done
    POS2=$(($POS2 + 1))
    rowcount=$(($rowcount + 1))
    num3=$((num1 + num2))
    if [[ $TOTALLEN = $(($count)) ]];
    then
      sep=""
   else if [[ $rowcount = $COLS ]];
    then
      sep="\n"
      rowcount=$"0"
   else
      sep="\t"
    fi
fi
    finalstr=$finalstr$num3$sep
    count=$(($count + 1))
  done
  echo -e $finalstr
}

multiply() {
   if [ "$#" -ne 2 ]; then
      echo "Incorrect number of arguments. Expected 2, got $#. Please provide 2 matrices." >&2
      exit 1
   fi
   dims $1 > $t0
   dim1=$(cat $t0)
   dims $2 > $t0
   dim2=$(cat $t0)
   if [[ "$dim1" != "$dim2" ]]; then
      echo "Can't add mismatched matrices." >&2
      exit 1
   fi

   filein $1
   FILE1=$FILE
   filein $2
   FILE2=$FILE
   ROWS=$x
   COLS=$COLS
   TOTALLEN=$((x * COLS))
   TOTALLEN=$((TOTALLEN - 1))
   POS1=$"0"
   POS2=$"0"

   echo "$FILE1" | grep -o "[0-9-]*[$'\t'$'\n']*" | grep -o "[0-9-]*" > $t1
   FILE1=$(cat $t1)
   echo "$FILE2" | grep -o "[0-9-]*[$'\t'$'\n']*" | grep -o "[0-9-]*" > $t2
   FILE2=$(cat $t2)
   while [[ $count -le $TOTALLEN ]]; do
     num1=$""
     num2=$""
     re=[0-9-]
     while [[ ${FILE1:$POS1:1} =~ ${re} ]]; do
      num1=$num1${FILE1:$POS1:1}
      POS1=$(($POS1 + 1))
     done
     POS1=$(($POS1 + 1))
     while [[ "${FILE2:$POS2:1}" =~ ${re} ]]; do
      num2=$num2${FILE2:$POS2:1}
      POS2=$(($POS2 + 1))
     done
     POS2=$(($POS2 + 1))
     rowcount=$(($rowcount + 1))
     num3=$((num1 \* num2))
     if [[ $rowcount = $COLS ]];
     then
       sep=""
    else if [[ $rowcount = $COLS ]];
     then
       sep="\n"
       rowcount=$"0"
    else
       sep="\t"
     fi
 fi
     finalstr=$finalstr$num3$sep
     count=$(($count + 1))
   done
   echo -e $finalstr
}

###MAIN###
t0="$(mktemp temp.XXXXX)"
t1="$(mktemp temp.XXXXX)"
t2="$(mktemp temp.XXXXX)"
trap "rm -rf $t0 $t1 $t2; trap - EXIT" INT HUP TERM EXIT

case "$1" in
    dims|d)
      dims "${@:2}"
      ;;
    transpose|t)
        transpose "${@:2}"
        ;;
    mean|m)
        mean "${@:2}"
        ;;
    add|a)
        add "${@:2}"
        ;;
    multiply|M)
        multiply "${@:2}"
        ;;
    help|h)
        echo $"Usage: $0 {dims|transpose|mean|add|multiply}"
        ;;
    *)
        echo -e $"Command Does not Exist!\nUsage: $0 {dims|transpose|mean|add|multiply}">&2
        exit 1
esac
exit 0
